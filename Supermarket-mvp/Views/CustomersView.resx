<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnNew.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>